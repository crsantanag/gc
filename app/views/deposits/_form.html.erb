<div data-controller="deposit-form">
<%= form_with(model: deposit) do |form| %>

  <%= hidden_field_tag :from_month, params[:from_month] || 1 %>
  <%= hidden_field_tag :to_month, params[:to_month] || 12 %>
  <%= hidden_field_tag :grouping, params[:grouping] %>

  <% if deposit.errors.any? %>
    <div style="color: red">
      <% if deposit.errors.count == 1 %>
        <h4>Se encontr칩 <%= deposit.errors.count %> error </h4>
      <% else %>
        <h4>Se encontraron <%= deposit.errors.count %> errores </h4>
      <% end %>
      <ul>
        <% deposit.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-2">
    <%= form.label :date, "Fecha" %><br>
      <%if action_name == "new" %>
        <%= form.date_field :date, value: Date.today, required: true, class: "ps-1 col-5 col-md-2 border border-2 border-secondary-subtle rounded", style:"height: 35px" %>
      <% else %>
        <%= form.date_field :date, required: true, class: "ps-1 col-4 col-md-2 border border-2 border-secondary-subtle rounded", style:"height: 35px" %>
      <% end %>
  </div>

  <div class="my-2">
    <%= form.label :apartment_id, current_user.type_community %><br>
    <%= form.collection_select :apartment_id, @apartments, :id, :number,
        { prompt: "Seleccione #{current_user.type_community.downcase}" },
        { class: "ps-1 col-8 col-md-2 border border-2 border-secondary-subtle rounded", style: "height: 35px", required: true} %>
  </div>

  Concepto del Ingreso<br>
  <div class="ps-1 btn-group border border-2" data-toggle="buttons">
    <%= form.radio_button :tipo_ingreso, "ingreso_comun", checked: true, id: "tipo_ingreso_comun" %>
    <%= form.label :tipo_ingreso, "Cuota mensual", value: "ingreso_comun", class: "btn", for: "tipo_ingreso_comun" %>

    <%= form.radio_button :tipo_ingreso, "ingreso_extraordinario", id: "tipo_ingreso_extraordinario" %>
    <%= form.label :tipo_ingreso, "Cuota extraordinaria", value: "ingreso_extraordinario", class: "btn", for: "tipo_ingreso_extraordinario" %>

    <%= form.radio_button :tipo_ingreso, "ingreso_otro", id: "tipo_ingreso_otro" %>
    <%= form.label :tipo_ingreso, "Otro", value: "ingreso_otro", class: "btn", for: "tipo_ingreso_otro" %>
  </div>


  <div class="field my-2">
    <%= form.label :comment, "Comentario" %><br>
    <%= form.text_area :comment, required: true, class: "ps-1 col-11 col-md-6 border border-2 border-secondary-subtle rounded", rows: 3 %>
  </div>

  <!-- Contenedor de los campos Mes y A침o -->
  <div class="my-2", id="date_fields" data-deposit-form-target="dateFields">
    <div class="mb-2">
      <%= form.label :mes, "Mes" %>
      <%= form.select :mes, options_for_select(Deposit::MONTHS, form.object.mes),
          { prompt: "Seleccione mes" },
          { class: "ps-1 col-5 col-md-2 border border-2 border-secondary-subtle rounded", style: "height: 35px", data: { deposit_form_target: "mes" }, required: true } %>
    </div>
    <div>
      <%= form.label :ano, "A침o" %>
      <%= form.select :ano, options_for_select(Deposit::YEARS, form.object.ano),
          { prompt: "Seleccione a침o" },
          { class: "ps-1 col-5 col-md-2 border border-2 border-secondary-subtle rounded", style: "height: 35px", data: { deposit_form_target: "ano" }, required: true } %>
    </div>
  </div>

  <div class="mb-4"> 
    <%= form.label :amount, "Cantidad" %><br>
    <%= form.text_field :amount, required: true,
        class: "ps-1 col-5 col-md-2 border border-2 border-secondary-subtle rounded",
        style:"height: 35px", id: "amount_input" %>
  </div>

  <div>
    <% if action_name == "new" %>
      <%= form.submit "Ingresar", class: "btn btn-info col-4 col-sm-3 col-md-2 col-lg-1" %>
      <div class="py-2">
        <%= link_to "Regresar", deposits_path(from_month: params[:from_month], to_month: params[:to_month]), class: "btn btn-light border border-2 btn-ancho col-4 col-sm-3 col-md-2 col-lg-1" %>
      </div>
    <% else %>
      <%= form.submit "Actualizar", class: "btn btn-info col-4 col-sm-3 col-md-2 col-lg-1" %>
      <div class="py-2">
        <%= link_to "Regresar", deposits_path(from_month: params[:from_month], to_month: params[:to_month]), class: "btn btn-light border border-2 btn-ancho col-4 col-sm-3 col-md-2 col-lg-1" %>
      </div>
     <% end %>
  </div>

<% end %>
</div>


<script>
  function initDepositFormScript() {
    const dateFields = document.getElementById("date_fields");
    const tipoIngresoRadios = document.querySelectorAll("input[name='deposit[tipo_ingreso]']");
    const amountInput = document.getElementById("amount_input");

    if (dateFields && tipoIngresoRadios.length > 0 && !dateFields.dataset.listenerAdded) {
      dateFields.dataset.listenerAdded = true;

      const mesSelect = dateFields.querySelector('[data-deposit-target="mes"]');
      const anoSelect = dateFields.querySelector('[data-deposit-target="ano"]');

      function toggleDateFields() {
        const selected = Array.from(tipoIngresoRadios).find(r => r.checked)?.value;
        const isComun = selected === "ingreso_comun";
        dateFields.style.display = isComun ? "block" : "none";

        if (mesSelect && anoSelect) {
          mesSelect.required = isComun;
          anoSelect.required = isComun;
        }
      }

      tipoIngresoRadios.forEach(radio => radio.addEventListener("change", toggleDateFields));
      toggleDateFields();
    }

    if (amountInput && !amountInput.dataset.listenerAdded) {
      amountInput.dataset.listenerAdded = true;

      const formatCL = value => {
        const raw = value.replace(/\D/g, "");
        return new Intl.NumberFormat("es-CL", { minimumFractionDigits: 0 }).format(raw);
      };

      if (amountInput.value) {
        const raw = amountInput.value.replace(/\D/g, "");
        amountInput.dataset.originalValue = raw;
        amountInput.value = formatCL(raw);
      }

      amountInput.addEventListener("input", function () {
        const raw = this.value.replace(/\D/g, "");
        this.dataset.originalValue = raw;
        this.value = formatCL(raw);
      });

      amountInput.form?.addEventListener("submit", function () {
        amountInput.value = amountInput.dataset.originalValue;
      });
    }
  }

  document.addEventListener("turbo:load", initDepositFormScript);
  document.addEventListener("turbo:render", initDepositFormScript);
</script>